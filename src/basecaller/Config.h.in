
// Input for Configuration header file.

#ifndef _SEQUEL_COMMON_${configNamespace}_CONFIG_H_IN_
#define _SEQUEL_COMMON_${configNamespace}_CONFIG_H_IN_

namespace PacBio {
namespace Primary {
namespace ${configNamespace} {
    /// Local workspace directory that is mapped to perforce //PrimaryAnalysis/*/Sequel/...
    /// where * is the stream name.

#ifndef ATT_UNUSED
#  ifdef __INTEL_COMPILER
// this disables error message #593, "variable not used"
#    define ATT_UNUSED [[gnu::unused]]
#  else
#    define ATT_UNUSED __attribute__((unused))
#  endif
#endif

    static const char* workspaceDir           ATT_UNUSED = "${workspaceDir}";
    static const char* sequelBaseDir          ATT_UNUSED = "${SequelBaseDir}";

    /// There paths are relative to the currently parsed CMakeList.txt file.
    /// See http://www.cmake.org/Wiki/CMake_Useful_Variables
    static const char* cmakeCurrentListDir    ATT_UNUSED = "${CMAKE_CURRENT_LIST_DIR}";
    static const char* cmakeCurrentBinaryDir  ATT_UNUSED = "${CMAKE_CURRENT_BINARY_DIR}";
    static const char* cmakeCurrentProjectName ATT_UNUSED = "${PROJECT_NAME}";

    /// These paths are relative to the top of the cmake tree (the CMakeList.txt that was used to invoke cmake)
    static const char* cmakeTopBinaryDir      ATT_UNUSED = "${CMAKE_BINARY_DIR}";
    static const char* cmakeTopProjectName    ATT_UNUSED = "${CMAKE_PROJECT_NAME}";

    /// One of the following "","None","Debug","Release","RelWithDebInfo","MinSizeRel"
    static const char* cmakeBuildType         ATT_UNUSED = "${CMAKE_BUILD_TYPE}";
    static const char* cmakeInstallPrefix     ATT_UNUSED = "${CMAKE_INSTALL_PREFIX}";

    static const char* cmakeGitHash           ATT_UNUSED = "${GIT_LONG_COMMIT_HASH}";
    static const char* cmakeGitDate           ATT_UNUSED = "${GIT_COMMIT_DATE}";

    static const char* systemdCommonJson      ATT_UNUSED = "${SYSTEMD_COMMON_JSON}";

    inline void _throw_away_warnings()
    {
    // Not all of the above values are used in a problem, and the compilers issue warnings to that effect.
    // Casting to void tells the gcc compiler to ignore those warnings.
    // This trick does not seem to work on the Intel compiler, but the above attribute trick with ATT_UNUSED does
    // work.
       (void)workspaceDir;
       (void)sequelBaseDir;
       (void)cmakeCurrentListDir;
       (void)cmakeCurrentBinaryDir;
       (void)cmakeCurrentProjectName;
       (void)cmakeTopBinaryDir;
       (void)cmakeTopProjectName;
       (void)cmakeBuildType;
       (void)cmakeInstallPrefix;
       (void)cmakeGitHash;
       (void)cmakeGitDate;
    }
}}}	// PacBio::Primary::${configNamespace}

#endif // _SEQUEL_COMMON_*_CONFIG_H_IN_
